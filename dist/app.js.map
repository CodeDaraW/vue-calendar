{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 16202ceafdd3e3ebd056","webpack:///./src/app.js","webpack:///app.vue","webpack:///calendar.vue","webpack:///date-footer.vue","webpack:///date-header.vue","webpack:///date-list.vue","webpack:///pick-month.vue","webpack:///./src/app.vue?63fe","webpack:///./src/components/calendar.vue?67b2","webpack:///./src/components/date-footer.vue?c20e","webpack:///./src/components/date-header.vue?f798","webpack:///./src/components/date-list.vue?6b2b","webpack:///./src/components/pick-month.vue?b4da","webpack:///./src/app.vue","webpack:///./src/components/calendar.vue","webpack:///./src/components/date-footer.vue","webpack:///./src/components/date-header.vue","webpack:///./src/components/date-list.vue","webpack:///./src/components/pick-month.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_app","_app2","$mount","Object","defineProperty","value","_calendar","_calendar2","data","show","dateText","components","calendar","methods","createDateText","date","Date","year","getFullYear","month","getMonth","day","getDate","str","this","replace","ready","_dateHeader","_dateHeader2","_dateFooter","_dateFooter2","_pickMonth","_pickMonth2","_dateList","_dateList2","props","aa","status","top","turnType","dateHeader","dateFooter","pickMonth","dateList","computed","week","array","getDay","slice","events","select","_this","$nextTick","currentDay","_this2","height","document","querySelector","offsetHeight","docHeight","documentElement","clientHeight","turnTarget","addEventListener","e","target","className","ok","years","createYearsList","substr","i","push","selectYear","$el","scrollTop","indexOf","weeks","months","bb","result","Array","first","days","filter","v","_i","count","Math","ceil","lastDay","_i2","ii","prevMonth","setMonth","nextMonth","selectDate","$dispatch","setDate","__vue_script__","__vue_template__","options","template","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","later","last","now","setTimeout","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","warn","inDoc","node","doc","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","off","removeEventListener","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","type","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","prototype","_init","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","_maxUpdateCount","pushWatcher","user","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","kebab","setObjectClasses","toggleClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","String","pushJob","job","queue$1","flush","f","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","forEach","isHidden","rect","getBoundingClientRect","width","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","update","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","source","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","Error","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(8);\n\t\n\tvar _vue = __webpack_require__(23);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _app = __webpack_require__(17);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default(_app2.default).$mount(\"#app\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _calendar = __webpack_require__(18);\n\t\n\tvar _calendar2 = _interopRequireDefault(_calendar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tshow: false,\n\t\t\t\tdateText: \"\"\n\t\t\t};\n\t\t},\n\t\n\t\tcomponents: {\n\t\t\tcalendar: _calendar2.default\n\t\t},\n\t\tmethods: {\n\t\t\tcreateDateText: function createDateText() {\n\t\t\t\tvar date = new Date();\n\t\t\t\tvar year = date.getFullYear();\n\t\t\t\tvar month = date.getMonth() + 1;\n\t\t\t\tvar day = date.getDate();\n\t\n\t\t\t\tvar str = year + \"/\" + month + \"/\" + day;\n\t\n\t\t\t\tthis.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\");\n\t\t\t}\n\t\t},\n\t\tready: function ready() {\n\t\t\tthis.createDateText();\n\t\t}\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _dateHeader = __webpack_require__(20);\n\t\n\tvar _dateHeader2 = _interopRequireDefault(_dateHeader);\n\t\n\tvar _dateFooter = __webpack_require__(19);\n\t\n\tvar _dateFooter2 = _interopRequireDefault(_dateFooter);\n\t\n\tvar _pickMonth = __webpack_require__(22);\n\t\n\tvar _pickMonth2 = _interopRequireDefault(_pickMonth);\n\t\n\tvar _dateList = __webpack_require__(21);\n\t\n\tvar _dateList2 = _interopRequireDefault(_dateList);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tprops: [\"show\", \"dateText\"],\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\taa: new Date(this.dateText),\n\t\t\t\tstatus: true,\n\t\t\t\ttop: 0,\n\t\t\t\tturnType: \"\"\n\t\t\t};\n\t\t},\n\t\n\t\tcomponents: {\n\t\t\tdateHeader: _dateHeader2.default,\n\t\t\tdateFooter: _dateFooter2.default,\n\t\t\tpickMonth: _pickMonth2.default,\n\t\t\tdateList: _dateList2.default\n\t\t},\n\t\tcomputed: {\n\t\t\tdate: function date() {\n\t\t\t\treturn new Date(this.dateText);\n\t\t\t},\n\t\t\tweek: function week() {\n\t\t\t\tvar array = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t\t\tvar day = new Date(this.dateText).getDay();\n\t\n\t\t\t\treturn array[day];\n\t\t\t},\n\t\t\tmonth: function month() {\n\t\t\t\tvar array = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t\t\tvar month = new Date(this.dateText).getMonth();\n\t\n\t\t\t\treturn array[month];\n\t\t\t},\n\t\t\tday: function day() {\n\t\t\t\treturn this.dateText.slice(-2);\n\t\t\t}\n\t\t},\n\t\tevents: {\n\t\t\tselect: function select() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tthis.$nextTick(function () {\n\t\t\t\t\tvar currentDay = +_this.dateText.slice(-2);\n\t\t\t\t\tvar date = _this.date;\n\t\t\t\t\tvar year = date.getFullYear();\n\t\t\t\t\tvar month = date.getMonth() + 1;\n\t\t\t\t\tvar day = date.getDate();\n\t\n\t\t\t\t\tvar str = year + \"/\" + month + \"/\" + day;\n\t\n\t\t\t\t\t_this.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\");\n\t\n\t\t\t\t\tday < currentDay ? _this.turnType = \"up\" : _this.turnType = \"down\";\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tready: function ready() {\n\t\t\tvar _this2 = this;\n\t\n\t\t\tvar height = document.querySelector(\".calendar-container\").offsetHeight,\n\t\t\t    docHeight = document.documentElement.clientHeight;\n\t\n\t\t\tthis.top = (docHeight - height) / 2 + \"px\";\n\t\n\t\t\tvar turnTarget = document.querySelector(\".calendar-header h2\");\n\t\n\t\t\tturnTarget.addEventListener(\"animationend\", function (e) {\n\t\t\t\te.target.className = \"\";\n\t\n\t\t\t\t_this2.turnType = \"\";\n\t\t\t}, false);\n\t\t}\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = {\n\t\tprops: [\"show\", \"date\"],\n\t\tmethods: {\n\t\t\tok: function ok() {\n\t\t\t\tvar date = this.date;\n\t\t\t\tvar year = date.getFullYear();\n\t\t\t\tvar month = date.getMonth() + 1;\n\t\t\t\tvar day = date.getDate();\n\t\n\t\t\t\tvar str = year + \"/\" + month + \"/\" + day;\n\t\n\t\t\t\tthis.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\");\n\t\n\t\t\t\tthis.show = false;\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = {\n\t\tprops: [\"status\", \"dateText\", \"turnType\"],\n\t\tcomputed: {\n\t\t\tweek: function week() {\n\t\t\t\tvar array = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t\t\tvar day = new Date(this.dateText).getDay();\n\t\n\t\t\t\treturn array[day];\n\t\t\t},\n\t\t\tmonth: function month() {\n\t\t\t\tvar array = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t\t\tvar month = new Date(this.dateText).getMonth();\n\t\n\t\t\t\treturn array[month];\n\t\t\t},\n\t\t\tday: function day() {\n\t\t\t\treturn this.dateText.slice(-2);\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = {\n\t\tprops: [\"dateText\"],\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tyears: []\n\t\t\t};\n\t\t},\n\t\n\t\tmethods: {\n\t\t\tcreateYearsList: function createYearsList() {\n\t\t\t\tvar year = +this.dateText.substr(0, 4);\n\t\t\t\tvar array = [];\n\t\t\t\tvar i = 100;\n\t\n\t\t\t\twhile (i) {\n\t\t\t\t\tarray.push(year - i);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\n\t\t\t\ti = 0;\n\t\n\t\t\t\twhile (i < 100) {\n\t\t\t\t\tarray.push(year + i);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\n\t\t\t\tthis.years = array;\n\t\t\t},\n\t\t\tselectYear: function selectYear(year) {\n\t\t\t\tthis.dateText = year + this.dateText.slice(4);\n\t\t\t}\n\t\t},\n\t\tready: function ready() {\n\t\t\tvar _this = this;\n\t\n\t\t\tthis.createYearsList();\n\t\n\t\t\tthis.$nextTick(function () {\n\t\t\t\t_this.$el.scrollTop = _this.years.indexOf(+_this.dateText.substr(0, 4)) * 40 - 130;\n\t\t\t});\n\t\t}\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.default = {\n\t\tprops: [\"date\"],\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tday: new Date().getDate(),\n\t\t\t\tweeks: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n\t\t\t\tmonths: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\t\tbb: \"\"\n\t\t\t};\n\t\t},\n\t\n\t\tcomputed: {\n\t\t\tmonth: function month() {\n\t\t\t\treturn this.months[this.date.getMonth()];\n\t\t\t},\n\t\t\tyear: function year() {\n\t\t\t\treturn this.date.getFullYear();\n\t\t\t},\n\t\t\tcalendar: function calendar() {\n\t\t\t\tvar result = [];\n\t\t\t\tvar calendar = new Array(42);\n\t\t\t\tvar first = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay();\n\t\t\t\tvar days = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0).getDate();\n\t\n\t\t\t\tfor (var i = 0; i < days; i++, first++) {\n\t\t\t\t\tcalendar[first] = i + 1;\n\t\t\t\t}\n\t\n\t\t\t\tcalendar = calendar.filter(function (v) {\n\t\t\t\t\treturn v;\n\t\t\t\t});\n\t\n\t\t\t\tfirst -= days;\n\t\n\t\t\t\tresult[0] = [];\n\t\n\t\t\t\tvar currentDay = first;\n\t\n\t\t\t\tfor (var _i = 0; _i < 7 - currentDay; _i++, first++) {\n\t\t\t\t\tresult[0][first] = {\n\t\t\t\t\t\tday: _i + 1,\n\t\t\t\t\t\tdate: new Date(this.year + \"/\" + this.month + \"/\" + (_i + 1))\n\t\t\t\t\t};\n\t\t\t\t}\n\t\n\t\t\t\twhile (currentDay > -1) {\n\t\t\t\t\tresult[0][currentDay - 1] = {\n\t\t\t\t\t\tday: 32,\n\t\t\t\t\t\tdate: new Date(this.year + \"/\" + this.month + \"/32\")\n\t\t\t\t\t};\n\t\t\t\t\tcurrentDay--;\n\t\t\t\t}\n\t\n\t\t\t\tvar count = Math.ceil((days - (7 - first)) / 7);\n\t\t\t\tvar lastDay = result[0].slice(-1)[0].day;\n\t\n\t\t\t\tfor (var _i2 = 1; _i2 <= count; _i2++) {\n\t\t\t\t\tresult[_i2] = new Array(7);\n\t\n\t\t\t\t\tfor (var ii = 0; ii < 7; ii++) {\n\t\n\t\t\t\t\t\tresult[_i2][ii] = {\n\t\t\t\t\t\t\tday: calendar[lastDay + ii],\n\t\t\t\t\t\t\tdate: new Date(this.year + \"/\" + this.month + \"/\" + calendar[lastDay + ii])\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlastDay += 7;\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tprevMonth: function prevMonth() {\n\t\t\t\tthis.bb = \"\";\n\t\t\t\tthis.date = new Date(this.date.setMonth(this.date.getMonth() - 1));\n\t\t\t},\n\t\t\tnextMonth: function nextMonth() {\n\t\t\t\tthis.bb = \"\";\n\t\t\t\tthis.date = new Date(this.date.setMonth(this.date.getMonth() + 1));\n\t\t\t},\n\t\t\tselectDate: function selectDate(value) {\n\t\t\t\tthis.$dispatch(\"select\");\n\t\n\t\t\t\tthis.date = new Date(this.date.setDate(value.day));\n\t\t\t\tthis.bb = value.day;\n\t\t\t}\n\t\t},\n\t\tready: function ready() {\n\t\t\tthis.bb = this.date.getDate();\n\t\t}\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <input type=text class=input v-model=dateText @focus=\\\"show = true\\\"> <calendar :show.sync=show :date-text.sync=dateText v-if=show></calendar> </div>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=calendar-wrapper transition=calendar> <div class=calendar-mask @click=\\\"show = false\\\"></div> <div class=calendar-container :style=\\\"{top: top}\\\"> <date-header :date-text=dateText :turn-type=turnType :status.sync=status></date-header> <pick-month :date.sync=date :aa.sync=aa v-if=status></pick-month> <date-list :date-text=dateText v-if=\\\"! status\\\"></date-list> <date-footer :show.sync=show :date=date></date-footer> </div> </div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<footer class=calendar-footer> <button @click=\\\"show = false\\\">cancel</button> <button @click=ok>ok</button> </footer>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header class=calendar-header> <p :class=\\\"{active: ! status}\\\" v-text=\\\"dateText.substr(0, 4)\\\" @click=\\\"status = false\\\"></p> <h2 :class=\\\"{active: status, up: turnType === 'up', down: turnType === 'down'}\\\" v-text=\\\"week + ',' + month + ' ' + day\\\" @click=\\\"status = true\\\"></h2> </header>\";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=select-year> <ol> <li :class=\\\"{active: year === + dateText.substr(0, 4)}\\\" v-for=\\\"year in years\\\" track-by=$index v-text=year @click=selectYear(year)></li> </ol> </div>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=calendar-content> <div class=select-month> <span class=arrow @click=prevMonth></span> <div class=date> <span class=month v-text=month></span> <span class=year v-text=year></span> </div> <span class=arrow @click=nextMonth></span> </div> <table class=select-date> <thead> <tr class=week-header> <th v-for=\\\"week in weeks\\\" v-text=week track-by=$index></th> </tr> </thead> <tbody> <tr v-for=\\\"week in calendar\\\"> <td :class=\\\"{today: day.date.toDateString() === new Date().toDateString(), selected: day.day === this.bb, not: ! day.day || day.day === 32}\\\" v-for=\\\"day in week\\\" track-by=$index v-text=\\\"day.day === 32 ? '' : day.day\\\" @click=selectDate(day)></td> </tr> </tbody> </table> </div>\";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.21\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (production) !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif ((production) !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (production) !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif ((production) !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if ((production) !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (production) !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (production) !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if ((production) !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (production) !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if ((production) !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (production) !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if ((production) !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif ((production) !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if ((production) !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if ((production) !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (production) !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (production) !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (production) !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if ((production) !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if ((production) !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if ((production) !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (production) !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if ((production) !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if ((production) !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (production) !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (production) !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (production) !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (production) !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif ((production) !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (production) !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (production) !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (production) !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (production) !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if ((production) !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (production) !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if ((production) !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (production) !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (!this.prevKeys) return;\n\t\n\t    var i = this.prevKeys.length;\n\t    while (i--) {\n\t      var key = this.prevKeys[i];\n\t      if (!key) continue;\n\t\n\t      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n\t      for (var j = 0, l = keys.length; j < l; j++) {\n\t        toggleClasses(this.el, keys[j], removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (!obj[key]) continue;\n\t    toggleClasses(el, key, addClass);\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction toggleClasses(el, key, fn) {\n\t  key = key.trim();\n\t\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (production) !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if ((production) !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if ((production) !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (production) !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if ((production) !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if ((production) !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if ((production) !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (production) !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if ((production) !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (production) !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if ((production) !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if ((production) === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if ((production) !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if ((production) !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if ((production) !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (production) !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (production) !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if ((production) !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (production) !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (production) !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if ((production) !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if ((production) !== 'production') {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (production) !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if ((production) !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if ((production) !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if ((production) !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (production) !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (production) !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if ((production) !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if ((production) !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.21';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if ((production) !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 16202ceafdd3e3ebd056\n **/","import \"./css/normalize.css\"\r\nimport \"./css/common.css\"\r\nimport \"./css/app.css\"\r\nimport \"./css/calendar.css\"\r\n\r\nimport Vue from \"vue\"\r\nimport App from \"./app.vue\"\r\n\r\nnew Vue(App).$mount(\"#app\")\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.js\n **/","<template>\r\n\t<div>\r\n\t\t<input type=\"text\" class=\"input\" v-model=\"dateText\" @focus=\"show = true\">\r\n\t\t<calendar :show.sync=\"show\" :date-text.sync=\"dateText\" v-if=\"show\"></calendar>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport calendar from \"./components/calendar.vue\"\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tshow: false,\r\n\t\t\t\tdateText: \"\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tcalendar\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tcreateDateText() {\r\n\t\t\t\tlet date = new Date()\r\n\t\t\t\tlet year = date.getFullYear()\r\n\t\t\t\tlet month = date.getMonth() + 1\r\n\t\t\t\tlet day = date.getDate()\r\n\r\n\t\t\t\tlet str = `${year}/${month}/${day}`\r\n\r\n\t\t\t\tthis.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\")\r\n\t\t\t}\r\n\t\t},\r\n\t\tready() {\r\n\t\t\tthis.createDateText()\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** app.vue?0fcffd56\n **/","<template>\r\n\t<div class=\"calendar-wrapper\" transition=\"calendar\">\r\n\t\t<div class=\"calendar-mask\" @click=\"show = false\"></div>\r\n\t\t<div class=\"calendar-container\" :style=\"{top: top}\">\r\n\t\t\t<date-header :date-text=\"dateText\" :turn-type=\"turnType\" :status.sync=\"status\"></date-header>\r\n\t\t\t<pick-month :date.sync=\"date\" :aa.sync=\"aa\" v-if=\"status\"></pick-month>\r\n\t\t\t<date-list :date-text=\"dateText\" v-if=\"! status\"></date-list>\r\n\t\t\t<date-footer :show.sync=\"show\" :date=\"date\"></date-footer>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport dateHeader from \"./date-header.vue\"\r\n\timport dateFooter from \"./date-footer.vue\"\r\n\timport pickMonth from \"./pick-month.vue\"\r\n\timport dateList from \"./date-list.vue\"\r\n\t\r\n\texport default {\r\n\t\tprops: [\"show\", \"dateText\"],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\taa: new Date(this.dateText),\r\n\t\t\t\tstatus: true,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tturnType: \"\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tdateHeader,\r\n\t\t\tdateFooter,\r\n\t\t\tpickMonth,\r\n\t\t\tdateList\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tdate() {\r\n\t\t\t\treturn new Date(this.dateText)\r\n\t\t\t},\r\n\t\t\tweek() {\r\n\t\t\t\tlet array = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\t\t\t\tlet day = new Date(this.dateText).getDay()\r\n\r\n\t\t\t\treturn array[day]\r\n\t\t\t},\r\n\t\t\tmonth() {\r\n\t\t\t\tlet array = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\t\t\t\tlet month = new Date(this.dateText).getMonth()\r\n\r\n\t\t\t\treturn array[month]\r\n\t\t\t},\r\n\t\t\tday() {\r\n\t\t\t\treturn this.dateText.slice(-2)\r\n\t\t\t}\r\n\t\t},\r\n\t\tevents: {\r\n\t\t\tselect() {\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tlet currentDay = + this.dateText.slice(-2)\r\n\t\t\t\t\tlet date = this.date\r\n\t\t\t\t\tlet year = date.getFullYear()\r\n\t\t\t\t\tlet month = date.getMonth() + 1\r\n\t\t\t\t\tlet day = date.getDate()\r\n\r\n\t\t\t\t\tlet str = `${year}/${month}/${day}`\r\n\r\n\t\t\t\t\tthis.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\")\r\n\r\n\t\t\t\t\tday < currentDay ? this.turnType = \"up\" : this.turnType = \"down\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tready() {\r\n\t\t\tlet height = document.querySelector(\".calendar-container\").offsetHeight,\r\n\t\t\t\tdocHeight = document.documentElement.clientHeight\r\n\r\n\t\t\tthis.top = (docHeight - height) / 2 + \"px\"\r\n\r\n\t\t\tlet turnTarget = document.querySelector(\".calendar-header h2\")\r\n\r\n\t\t\tturnTarget.addEventListener(\"animationend\", (e) => {\r\n\t\t\t\te.target.className = \"\"\r\n\r\n\t\t\t\tthis.turnType = \"\"\r\n\t\t\t}, false)\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** calendar.vue?1a4f093e\n **/","<template>\r\n\t<footer class=\"calendar-footer\">\r\n\t\t<button @click=\"show = false\">cancel</button>\r\n\t\t<button @click=\"ok\">ok</button>\r\n\t</footer>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: [\"show\", \"date\"],\r\n\t\tmethods: {\r\n\t\t\tok() {\r\n\t\t\t\tlet date = this.date\r\n\t\t\t\tlet year = date.getFullYear()\r\n\t\t\t\tlet month = date.getMonth() + 1\r\n\t\t\t\tlet day = date.getDate()\r\n\r\n\t\t\t\tlet str = `${year}/${month}/${day}`\r\n\r\n\t\t\t\tthis.dateText = str.replace(/\\b(\\w)\\b/g, \"0$1\")\r\n\r\n\t\t\t\tthis.show = false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** date-footer.vue?3398ba42\n **/","<template>\r\n\t<header class=\"calendar-header\">\r\n\t\t<p :class=\"{active: ! status}\" v-text=\"dateText.substr(0, 4)\" @click=\"status = false\"></p>\r\n\t\t<h2 :class=\"{active: status, up: turnType === 'up', down: turnType === 'down'}\" v-text=\"week + ',' + month + ' ' + day\" @click=\"status = true\"></h2>\r\n\t</header>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: [\"status\", \"dateText\", \"turnType\"],\r\n\t\tcomputed: {\r\n\t\t\tweek() {\r\n\t\t\t\tlet array = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\t\t\t\tlet day = new Date(this.dateText).getDay()\r\n\r\n\t\t\t\treturn array[day]\r\n\t\t\t},\r\n\t\t\tmonth() {\r\n\t\t\t\tlet array = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\t\t\t\tlet month = new Date(this.dateText).getMonth()\r\n\r\n\t\t\t\treturn array[month]\r\n\t\t\t},\r\n\t\t\tday() {\r\n\t\t\t\treturn this.dateText.slice(-2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** date-header.vue?746d9425\n **/","<template>\r\n\t<div class=\"select-year\">\r\n\t\t<ol>\r\n\t\t\t<li :class=\"{active: year === + dateText.substr(0, 4)}\" v-for=\"year in years\" track-by=\"$index\" v-text=\"year\" @click=\"selectYear(year)\"></li>\r\n\t\t</ol>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: [\"dateText\"],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tyears: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tcreateYearsList() {\r\n\t\t\t\tlet year = + this.dateText.substr(0, 4)\r\n\t\t\t\tlet array = []\r\n\t\t\t\tlet i = 100\r\n\r\n\t\t\t\twhile(i) {\r\n\t\t\t\t\tarray.push(year - i)\r\n\t\t\t\t\ti--\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti = 0\r\n\r\n\t\t\t\twhile(i < 100) {\r\n\t\t\t\t\tarray.push(year + i)\r\n\t\t\t\t\ti++\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.years = array\r\n\t\t\t},\r\n\t\t\tselectYear(year) {\r\n\t\t\t\tthis.dateText = year + this.dateText.slice(4)\r\n\t\t\t}\r\n\t\t},\r\n\t\tready() {\r\n\t\t\tthis.createYearsList()\r\n\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tthis.$el.scrollTop = this.years.indexOf(+ this.dateText.substr(0, 4)) * 40 - 130\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** date-list.vue?1932957c\n **/","<template>\r\n\t<div class=\"calendar-content\">\r\n\t\t<div class=\"select-month\">\r\n\t\t\t<span class=\"arrow\" @click=\"prevMonth\"></span>\r\n\t\t\t<div class=\"date\">\r\n\t\t\t\t<span class=\"month\" v-text=\"month\"></span>\r\n\t\t\t\t<span class=\"year\" v-text=\"year\"></span>\r\n\t\t\t</div>\r\n\t\t\t<span class=\"arrow\" @click=\"nextMonth\"></span>\r\n\t\t</div>\r\n\t\t<table class=\"select-date\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr class=\"week-header\">\r\n\t\t\t\t\t<th v-for=\"week in weeks\" v-text=\"week\" track-by=\"$index\"></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr v-for=\"week in calendar\">\r\n\t\t\t\t\t<td :class=\"{today: day.date.toDateString() === new Date().toDateString(), selected: day.day === this.bb, not: ! day.day || day.day === 32}\" v-for=\"day in week\" track-by=\"$index\" v-text=\"day.day === 32 ? '' : day.day\" @click=\"selectDate(day)\"></td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t\t<!-- <div class=\"select-date\"></div> -->\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: [\"date\"],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tday: new Date().getDate(),\r\n\t\t\t\tweeks: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\r\n\t\t\t\tmonths: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n\t\t\t\tbb: \"\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tmonth() {\r\n\t\t\t\treturn this.months[this.date.getMonth()]\r\n\t\t\t},\r\n\t\t\tyear() {\r\n\t\t\t\treturn this.date.getFullYear()\r\n\t\t\t},\r\n\t\t\tcalendar() {\r\n\t\t\t\tlet result = []\r\n\t\t\t\tlet calendar = new Array(42)\r\n\t\t\t\tlet first = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay()\r\n\t\t\t\tlet days = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0).getDate()\r\n\r\n\t\t\t\tfor (let i = 0; i < days; i++, first++) {\r\n\t\t\t\t\tcalendar[first] = i + 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcalendar = calendar.filter((v) => v)\r\n\r\n\t\t\t\t// 切割\r\n\t\t\t\tfirst -= days\r\n\r\n\t\t\t\tresult[0] = []\r\n\r\n\t\t\t\tlet currentDay = first\r\n\r\n\t\t\t\tfor (let i = 0; i < 7 - currentDay; i++, first++) {\r\n\t\t\t\t\tresult[0][first] = {\r\n\t\t\t\t\t\tday: i + 1,\r\n\t\t\t\t\t\tdate: new Date(`${this.year}/${this.month}/${i + 1}`)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile(currentDay > -1) {\r\n\t\t\t\t\tresult[0][currentDay - 1] = {\r\n\t\t\t\t\t\tday: 32,\r\n\t\t\t\t\t\tdate: new Date(`${this.year}/${this.month}/32`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentDay--\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet count = Math.ceil((days - (7 - first)) / 7)\r\n\t\t\t\tlet lastDay = result[0].slice(-1)[0].day\r\n\r\n\t\t\t\tfor (let i = 1; i <= count; i++) {\r\n\t\t\t\t\tresult[i] = new Array(7)\r\n\r\n\t\t\t\t\tfor (let ii = 0; ii < 7; ii++) {\r\n\t\t\t\t\t\t//let lastDay = result[ii].slice(-1)[0]\r\n\r\n\t\t\t\t\t\tresult[i][ii] = {\r\n\t\t\t\t\t\t\tday: calendar[lastDay + ii],\r\n\t\t\t\t\t\t\tdate: new Date(`${this.year}/${this.month}/${calendar[lastDay + ii]}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlastDay += 7\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.dir(result)\r\n\t\t\t\treturn result\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tprevMonth() {\r\n\t\t\t\tthis.bb = \"\"\r\n\t\t\t\tthis.date = new Date(this.date.setMonth(this.date.getMonth() - 1))\r\n\t\t\t},\r\n\t\t\tnextMonth() {\r\n\t\t\t\tthis.bb = \"\"\r\n\t\t\t\tthis.date = new Date(this.date.setMonth(this.date.getMonth() + 1))\r\n\t\t\t},\r\n\t\t\tselectDate(value) {\r\n\t\t\t\tthis.$dispatch(\"select\")\r\n\r\n\t\t\t\tthis.date = new Date(this.date.setDate(value.day))\r\n\t\t\t\tthis.bb = value.day\r\n\t\t\t}\r\n\t\t},\r\n\t\tready() {\r\n\t\t\tthis.bb = this.date.getDate()\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** pick-month.vue?550dbe96\n **/","module.exports = \"<div> <input type=text class=input v-model=dateText @focus=\\\"show = true\\\"> <calendar :show.sync=show :date-text.sync=dateText v-if=show></calendar> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/app.vue\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \"<div class=calendar-wrapper transition=calendar> <div class=calendar-mask @click=\\\"show = false\\\"></div> <div class=calendar-container :style=\\\"{top: top}\\\"> <date-header :date-text=dateText :turn-type=turnType :status.sync=status></date-header> <pick-month :date.sync=date :aa.sync=aa v-if=status></pick-month> <date-list :date-text=dateText v-if=\\\"! status\\\"></date-list> <date-footer :show.sync=show :date=date></date-footer> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/calendar.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \"<footer class=calendar-footer> <button @click=\\\"show = false\\\">cancel</button> <button @click=ok>ok</button> </footer>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/date-footer.vue\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<header class=calendar-header> <p :class=\\\"{active: ! status}\\\" v-text=\\\"dateText.substr(0, 4)\\\" @click=\\\"status = false\\\"></p> <h2 :class=\\\"{active: status, up: turnType === 'up', down: turnType === 'down'}\\\" v-text=\\\"week + ',' + month + ' ' + day\\\" @click=\\\"status = true\\\"></h2> </header>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/date-header.vue\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=select-year> <ol> <li :class=\\\"{active: year === + dateText.substr(0, 4)}\\\" v-for=\\\"year in years\\\" track-by=$index v-text=year @click=selectYear(year)></li> </ol> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/date-list.vue\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div class=calendar-content> <div class=select-month> <span class=arrow @click=prevMonth></span> <div class=date> <span class=month v-text=month></span> <span class=year v-text=year></span> </div> <span class=arrow @click=nextMonth></span> </div> <table class=select-date> <thead> <tr class=week-header> <th v-for=\\\"week in weeks\\\" v-text=week track-by=$index></th> </tr> </thead> <tbody> <tr v-for=\\\"week in calendar\\\"> <td :class=\\\"{today: day.date.toDateString() === new Date().toDateString(), selected: day.day === this.bb, not: ! day.day || day.day === 32}\\\" v-for=\\\"day in week\\\" track-by=$index v-text=\\\"day.day === 32 ? '' : day.day\\\" @click=selectDate(day)></td> </tr> </tbody> </table> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/pick-month.vue\n ** module id = 16\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.vue\n ** module id = 17\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./calendar.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./calendar.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/calendar.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./date-footer.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./date-footer.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/date-footer.vue\n ** module id = 19\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./date-header.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./date-header.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/date-header.vue\n ** module id = 20\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./date-list.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./date-list.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/date-list.vue\n ** module id = 21\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./pick-month.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./pick-month.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/pick-month.vue\n ** module id = 22\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.21\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n  if (camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (!this.prevKeys) return;\n\n    var i = this.prevKeys.length;\n    while (i--) {\n      var key = this.prevKeys[i];\n      if (!key) continue;\n\n      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n      for (var j = 0, l = keys.length; j < l; j++) {\n        toggleClasses(this.el, keys[j], removeClass);\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (!obj[key]) continue;\n    toggleClasses(el, key, addClass);\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction toggleClasses(el, key, fn) {\n  key = key.trim();\n\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.21';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 23\n ** module chunks = 0\n **/"],"sourceRoot":""}